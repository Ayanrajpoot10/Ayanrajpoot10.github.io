name: Update APT Repo with Termuxify

on:
  workflow_dispatch:

jobs:
  build-and-update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout APT Repo
        uses: actions/checkout@v3

      - name: Set up Git for pushing
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"

      - name: Clone termuxify source repo
        run: |
          git clone https://github.com/Ayanrajpoot10/termuxify.git termuxify-src

      - name: Install build tools
        run: |
          sudo apt update
          sudo apt install -y dpkg-dev build-essential devscripts

      - name: Build the .deb package
        run: |
          cd termuxify-src
          # Create build script
          cat > build.sh << 'EOF'
          #!/bin/bash
          set -e

          VERSION="0.1.1"
          PKGNAME="termuxify"
          DEB_DIR="debian/${PKGNAME}"
          TERMUX_PREFIX="/data/data/com.termux/files/usr"
          USR_DIR="${DEB_DIR}${TERMUX_PREFIX}"
          BIN_DIR="${USR_DIR}/bin"
          SHARE_DIR="${USR_DIR}/share/${PKGNAME}"

          # Ensure debian directory exists
          mkdir -p debian

          rm -rf "$DEB_DIR" "${PKGNAME}_${VERSION}_all.deb"

          mkdir -p "$DEB_DIR/DEBIAN" "$BIN_DIR" "$SHARE_DIR/colors" "$SHARE_DIR/fonts"

          # Create basic control file if it doesn't exist
          if [ ! -f "debian/control" ]; then
            cat > debian/control << END
          Package: termuxify
          Version: ${VERSION}
          Architecture: all
          Maintainer: Ayanrajpoot10
          Description: Termux customization tool
          END
          fi

          # Create empty maintainer scripts if they don't exist
          for script in postinst prerm postrm; do
            if [ ! -f "debian/$script" ]; then
              echo "#!/bin/sh" > "debian/$script"
              echo "exit 0" >> "debian/$script"
            fi
          done

          for script in control postinst prerm postrm; do
              sed -i 's/\r$//' "debian/$script"
              install -m $([ "$script" = "control" ] && echo "644" || echo "755") "debian/$script" "$DEB_DIR/DEBIAN/$script"
          done

          # Ensure termuxify.sh exists
          touch termuxify.sh
          chmod +x termuxify.sh

          install -m755 termuxify.sh "$BIN_DIR/termuxify.sh"
          
          # Create directories if they don't exist
          mkdir -p colors fonts
          cp -a colors/. "$SHARE_DIR/colors/" || true
          cp -a fonts/. "$SHARE_DIR/fonts/" || true

          chmod 755 "$DEB_DIR"/DEBIAN/post* "$DEB_DIR"/DEBIAN/pre* 2>/dev/null || true
          chmod 755 "$DEB_DIR/DEBIAN"

          dpkg-deb --build "$DEB_DIR" "${PKGNAME}_${VERSION}_all.deb"

          echo "Package built: ${PKGNAME}_${VERSION}_all.deb"
          EOF
          
          chmod +x build.sh
          bash ./build.sh
          cd ..
          mkdir -p termuxify/pool
          mv termuxify-src/*.deb termuxify/pool/ || true

      - name: Rebuild APT metadata
        run: |
          cd termuxify
          for arch in all arm arm64; do
            mkdir -p dists/stable/main/binary-$arch
            dpkg-scanpackages -a $arch pool /dev/null > dists/stable/main/binary-$arch/Packages
            gzip -fk dists/stable/main/binary-$arch/Packages
          done

      - name: Commit and push updates
        run: |
          git add . 
          git commit -m "Auto: updated APT repo with latest termuxify build" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
